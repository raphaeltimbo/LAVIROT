from LAVIROT.elements import *
from LAVIROT.rotor import *
from numpy.testing import assert_almost_equal



n_ = 1
z_ = 0
le_ = 0.25
i_d_ = 0
o_d_ = 0.05
E_ = 211e9
G_ = 81.2e9
rho_ = 7810


def test_rotor_no_damping_2_shaft_elements():

    evalues = np.array([-3.8 + 68.6j, -3.8 - 68.6j, -1.8 + 30.j, -1.8 - 30.j, -0.7 + 14.4j, -0.7 - 14.4j])
    evalues2 = np.array([ 0.+68.7j,  0.-68.7j,  0.+30.1j,  0.-30.1j, -0.+14.4j, -0.-14.4j])

    Mr1 = np.array([[ 1.421,  0.   ,  0.   ,  0.049,  0.496,  0.   ,  0.   , -0.031,  0.   ,  0.   ,  0.   ,  0.   ],
                    [ 0.   ,  1.421, -0.049,  0.   ,  0.   ,  0.496,  0.031,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ],
                    [ 0.   , -0.049,  0.002,  0.   ,  0.   , -0.031, -0.002,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ],
                    [ 0.049,  0.   ,  0.   ,  0.002,  0.031,  0.   ,  0.   , -0.002,  0.   ,  0.   ,  0.   ,  0.   ],
                    [ 0.496,  0.   ,  0.   ,  0.031,  2.841,  0.   ,  0.   ,  0.   ,  0.496,  0.   ,  0.   , -0.031],
                    [ 0.   ,  0.496, -0.031,  0.   ,  0.   ,  2.841,  0.   ,  0.   ,  0.   ,  0.496,  0.031,  0.   ],
                    [ 0.   ,  0.031, -0.002,  0.   ,  0.   ,  0.   ,  0.005,  0.   ,  0.   , -0.031, -0.002,  0.   ],
                    [-0.031,  0.   ,  0.   , -0.002,  0.   ,  0.   ,  0.   ,  0.005,  0.031,  0.   ,  0.   , -0.002],
                    [ 0.   ,  0.   ,  0.   ,  0.   ,  0.496,  0.   ,  0.   ,  0.031,  1.421,  0.   ,  0.   , -0.049],
                    [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.496, -0.031,  0.   ,  0.   ,  1.421,  0.049,  0.   ],
                    [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.031, -0.002,  0.   ,  0.   ,  0.049,  0.002,  0.   ],
                    [ 0.   ,  0.   ,  0.   ,  0.   , -0.031,  0.   ,  0.   , -0.002, -0.049,  0.   ,  0.   ,  0.002]])

    tim0 = BeamElement(0, 0.0, le_, i_d_, o_d_, E_, G_, rho_,
                       shear_effects=True,
                       rotary_inertia=True,
                       gyroscopic=True)
    tim1 = BeamElement(1, 0.25, le_, i_d_, o_d_, E_, G_, rho_,
                       shear_effects=True,
                       rotary_inertia=True,
                       gyroscopic=True)

    shaft_elm = [tim0, tim1]
    rotor1 = Rotor(shaft_elm, [], [])
    assert_almost_equal([4, 2, 0, 5, 3, 1], rotor1.index(evalues))
    assert_almost_equal([4, 2, 0, 5, 3, 1], rotor1.index(evalues2))
    assert_almost_equal(rotor1.M, Mr1, decimal=3)


def test_rotor_no_damping_2_shaft_elements_1_disk_2_simple_bearings():

    Mr1 = np.array([[  1.421,   0.   ,   0.   ,   0.049,   0.496,   0.   ,   0.   ,  -0.031,   0.   ,   0.   ,   0.   ,   0.   ],
                    [  0.   ,   1.421,  -0.049,   0.   ,   0.   ,   0.496,   0.031,   0.   ,   0.   ,   0.   ,   0.   ,   0.   ],
                    [  0.   ,  -0.049,   0.002,   0.   ,   0.   ,  -0.031,  -0.002,   0.   ,   0.   ,   0.   ,   0.   ,   0.   ],
                    [  0.049,   0.   ,   0.   ,   0.002,   0.031,   0.   ,   0.   ,  -0.002,   0.   ,   0.   ,   0.   ,   0.   ],
                    [  0.496,   0.   ,   0.   ,   0.031,  35.431,   0.   ,   0.   ,   0.   ,   0.496,   0.   ,   0.   ,  -0.031],
                    [  0.   ,   0.496,  -0.031,   0.   ,   0.   ,  35.431,   0.   ,   0.   ,   0.   ,   0.496,   0.031,   0.   ],
                    [  0.   ,   0.031,  -0.002,   0.   ,   0.   ,   0.   ,   0.183,   0.   ,   0.   ,  -0.031,  -0.002,   0.   ],
                    [ -0.031,   0.   ,   0.   ,  -0.002,   0.   ,   0.   ,   0.   ,   0.183,   0.031,   0.   ,   0.   ,  -0.002],
                    [  0.   ,   0.   ,   0.   ,   0.   ,   0.496,   0.   ,   0.   ,   0.031,   1.421,   0.   ,   0.   ,  -0.049],
                    [  0.   ,   0.   ,   0.   ,   0.   ,   0.   ,   0.496,  -0.031,   0.   ,   0.   ,   1.421,   0.049,   0.   ],
                    [  0.   ,   0.   ,   0.   ,   0.   ,   0.   ,   0.031,  -0.002,   0.   ,   0.   ,   0.049,   0.002,   0.   ],
                    [  0.   ,   0.   ,   0.   ,   0.   ,  -0.031,   0.   ,   0.   ,  -0.002,  -0.049,   0.   ,   0.   ,   0.002]])

    A0_0 = np.array([[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]])

    A0_1 = np.array([[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]])

    A1_0 = np.array([[  20.63 ,   -0.   ,    0.   ,    4.114,  -20.958,    0.   ,    0.   ,    1.11 ,    0.056,   -0.   ,   -0.   ,   -0.014],
                     [   0.   ,   20.63 ,   -4.114,    0.   ,   -0.   ,  -20.958,   -1.11 ,    0.   ,   -0.   ,    0.056,    0.014,    0.   ],
                     [   0.   ,  697.351, -131.328,    0.   ,   -0.   , -705.253,  -44.535,    0.   ,   -0.   ,    2.079,    0.596,    0.   ],
                     [-697.351,    0.   ,   -0.   , -131.328,  705.253,   -0.   ,   -0.   ,  -44.535,   -2.079,    0.   ,    0.   ,    0.596],
                     [   0.442,    0.   ,   -0.   ,    0.072,   -0.887,   -0.   ,   -0.   ,   -0.   ,    0.442,    0.   ,    0.   ,   -0.072],
                     [   0.   ,    0.442,   -0.072,    0.   ,   -0.   ,   -0.887,    0.   ,    0.   ,    0.   ,    0.442,    0.072,   -0.   ],
                     [   0.   ,    6.457,   -0.837,    0.   ,   -0.   ,    0.   ,   -1.561,    0.   ,   -0.   ,   -6.457,   -0.837,   -0.   ],
                     [  -6.457,   -0.   ,    0.   ,   -0.837,    0.   ,    0.   ,    0.   ,   -1.561,    6.457,    0.   ,    0.   ,   -0.837],
                     [   0.056,   -0.   ,    0.   ,    0.014,  -20.958,    0.   ,    0.   ,   -1.11 ,   20.63 ,    0.   ,    0.   ,   -4.114],
                     [   0.   ,    0.056,   -0.014,    0.   ,   -0.   ,  -20.958,    1.11 ,    0.   ,    0.   ,   20.63 ,    4.114,   -0.   ],
                     [  -0.   ,   -2.079,    0.596,   -0.   ,    0.   ,  705.253,  -44.535,   -0.   ,   -0.   , -697.351, -131.328,    0.   ],
                     [   2.079,    0.   ,   -0.   ,    0.596, -705.253,   -0.   ,    0.   ,  -44.535,  697.351,    0.   ,    0.   , -131.328]])

    A1_1 = np.array([[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],
                     [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]])

    evals_sorted = np.array([-0. + 215.371j, 0. + 215.371j, -0. + 598.025j, 0. + 598.025j,
                             -0. + 3956.225j, 0. + 3956.225j, 0. + 4965.29j, -0. + 4965.29j,
                             0. + 33048.281j, -0. + 33048.281j, 0. + 33249.826j, -0. + 33249.826j,
                             -0. - 215.371j, 0. - 215.371j, -0. - 598.025j, 0. - 598.025j,
                             -0. - 3956.225j, 0. - 3956.225j, 0. - 4965.29j, -0. - 4965.29j,
                             0. - 33048.281j, -0. - 33048.281j, 0. - 33249.826j, -0. - 33249.826j])

    evects_sorted = np.array([[ -2.006e-17 -1.934e-03j,   1.682e-05 -1.005e-03j,  -4.941e-06 -1.245e-04j,   1.290e-18 +2.364e-04j],
                              [  3.233e-04 +1.481e-03j,  -3.738e-17 -2.243e-03j,   1.855e-18 -2.013e-04j,   1.116e-05 -3.988e-06j],
                              [ -1.466e-04 -6.716e-04j,  -2.183e-17 +1.017e-03j,   6.319e-18 -7.825e-04j,   4.338e-05 -1.550e-05j],
                              [  7.275e-17 -8.768e-04j,   7.625e-06 -4.555e-04j,   1.921e-05 +4.842e-04j,  -2.073e-18 -9.193e-04j],
                              [ -1.437e-18 -2.082e-03j,   1.811e-05 -1.082e-03j,  -3.825e-19 -1.372e-17j,   7.245e-19 +7.915e-18j],
                              [  3.480e-04 +1.595e-03j,  -3.055e-17 -2.414e-03j,   2.229e-19 +2.727e-18j,   2.343e-19 -3.483e-18j],
                              [ -3.640e-16 -4.075e-15j,  -3.803e-17 +1.751e-15j,   7.196e-18 -8.458e-04j,   4.689e-05 -1.676e-05j],
                              [  7.583e-17 +2.424e-15j,  -3.036e-17 +8.193e-16j,   2.076e-05 +5.234e-04j,  -2.496e-18 -9.936e-04j],
                              [  1.670e-17 -1.934e-03j,   1.682e-05 -1.005e-03j,   4.941e-06 +1.245e-04j,   4.738e-21 -2.364e-04j],
                              [  3.233e-04 +1.481e-03j,  -1.950e-17 -2.243e-03j,  -1.625e-18 +2.013e-04j,  -1.116e-05 +3.988e-06j],
                              [  1.466e-04 +6.716e-04j,  -4.690e-17 -1.017e-03j,   7.413e-18 -7.825e-04j,   4.338e-05 -1.550e-05j],
                              [  7.074e-17 +8.768e-04j,  -7.625e-06 +4.555e-04j,   1.921e-05 +4.842e-04j,  -2.942e-18 -9.193e-04j],
                              [  4.165e-01 -4.970e-14j,   2.164e-01 +3.622e-03j,   7.448e-02 -2.955e-03j,  -1.414e-01 +1.799e-16j],
                              [ -3.190e-01 +6.963e-02j,   4.830e-01 +8.426e-15j,   1.204e-01 +2.871e-16j,   2.385e-03 +6.673e-03j],
                              [  1.446e-01 -3.157e-02j,  -2.190e-01 +3.295e-13j,   4.680e-01 +1.354e-14j,   9.272e-03 +2.594e-02j],
                              [  1.888e-01 -1.545e-14j,   9.810e-02 +1.642e-03j,  -2.896e-01 +1.149e-02j,   5.497e-01 +2.613e-14j],
                              [  4.484e-01 +0.000e+00j,   2.329e-01 +3.899e-03j,   8.221e-15 -3.270e-16j,  -4.732e-15 +3.870e-16j],
                              [ -3.435e-01 +7.496e-02j,   5.199e-01 +0.000e+00j,  -1.637e-15 +9.756e-17j,   2.079e-15 +3.041e-17j],
                              [  8.920e-13 -3.959e-14j,  -3.790e-13 -7.155e-14j,   5.058e-01 +0.000e+00j,   1.002e-02 +2.804e-02j],
                              [ -5.106e-13 +1.425e-13j,  -1.802e-13 -5.442e-14j,  -3.130e-01 +1.242e-02j,   5.942e-01 +0.000e+00j],
                              [  4.165e-01 -2.394e-15j,   2.164e-01 +3.622e-03j,  -7.448e-02 +2.955e-03j,   1.414e-01 +3.224e-16j],
                              [ -3.190e-01 +6.963e-02j,   4.830e-01 +2.330e-14j,  -1.204e-01 -8.240e-16j,  -2.385e-03 -6.673e-03j],
                              [ -1.446e-01 +3.157e-02j,   2.190e-01 -1.033e-13j,   4.680e-01 +1.590e-14j,   9.272e-03 +2.594e-02j],
                              [ -1.888e-01 +1.506e-14j,  -9.810e-02 -1.642e-03j,  -2.896e-01 +1.149e-02j,   5.497e-01 +6.509e-15j]])

    evals = np.array([ 0.+33249.826j,  0.-33249.826j, -0.+33249.826j, -0.-33249.826j,
                      0.+33048.281j,  0.-33048.281j, -0.+33048.281j, -0.-33048.281j,
                      0. +4965.29j ,  0. -4965.29j , -0. +4965.29j , -0. -4965.29j ,
                      -0. +3956.225j, -0. -3956.225j,  0. +3956.225j,  0. -3956.225j,
                      -0.  +598.025j, -0.  -598.025j,  0.  +598.025j,  0.  -598.025j,
                      0.  +215.371j,  0.  -215.371j, -0.  +215.371j, -0.  -215.371j])

    evects = np.array([[  3.838e-21 -5.474e-07j,   3.838e-21 +5.474e-07j,   4.685e-21 +5.455e-07j,   4.685e-21 -5.455e-07j],
                       [  3.255e-07 +2.147e-07j,   3.255e-07 -2.147e-07j,   3.290e-07 -2.142e-07j,   3.290e-07 +2.142e-07j],
                       [  1.029e-05 +6.789e-06j,   1.029e-05 -6.789e-06j,   1.040e-05 -6.774e-06j,   1.040e-05 +6.774e-06j],
                       [ -6.090e-19 +1.731e-05j,  -6.090e-19 -1.731e-05j,  -6.454e-19 -1.725e-05j,  -6.454e-19 +1.725e-05j],
                       [  1.097e-19 -1.833e-08j,   1.097e-19 +1.833e-08j,   1.106e-19 +1.827e-08j,   1.106e-19 -1.827e-08j],
                       [  1.090e-08 +7.190e-09j,   1.090e-08 -7.190e-09j,   1.102e-08 -7.174e-09j,   1.102e-08 +7.174e-09j],
                       [  4.480e-19 -7.450e-19j,   4.480e-19 +7.450e-19j,   4.521e-19 +7.434e-19j,   4.521e-19 -7.434e-19j],
                       [  1.190e-18 +3.268e-19j,   1.190e-18 -3.268e-19j,   1.201e-18 -3.296e-19j,   1.201e-18 +3.296e-19j],
                       [  6.477e-18 -5.474e-07j,   6.477e-18 +5.474e-07j,   6.539e-18 +5.455e-07j,   6.539e-18 -5.455e-07j],
                       [  3.255e-07 +2.147e-07j,   3.255e-07 -2.147e-07j,   3.290e-07 -2.142e-07j,   3.290e-07 +2.142e-07j],
                       [ -1.029e-05 -6.789e-06j,  -1.029e-05 +6.789e-06j,  -1.040e-05 +6.774e-06j,  -1.040e-05 -6.774e-06j],
                       [  2.045e-16 -1.731e-05j,   2.045e-16 +1.731e-05j,   2.065e-16 +1.725e-05j,   2.065e-16 -1.725e-05j],
                       [  1.820e-02 -5.117e-16j,   1.820e-02 +5.117e-16j,  -1.814e-02 -5.291e-16j,  -1.814e-02 +5.291e-16j],
                       [ -7.138e-03 +1.082e-02j,  -7.138e-03 -1.082e-02j,   7.122e-03 +1.094e-02j,   7.122e-03 -1.094e-02j],
                       [ -2.257e-01 +3.423e-01j,  -2.257e-01 -3.423e-01j,   2.252e-01 +3.460e-01j,   2.252e-01 -3.460e-01j],
                       [ -5.757e-01 +0.000e+00j,  -5.757e-01 -0.000e+00j,   5.737e-01 +0.000e+00j,   5.737e-01 -0.000e+00j],
                       [  6.096e-04 +3.632e-15j,   6.096e-04 -3.632e-15j,  -6.075e-04 +3.665e-15j,  -6.075e-04 -3.665e-15j],
                       [ -2.391e-04 +3.625e-04j,  -2.391e-04 -3.625e-04j,   2.385e-04 +3.664e-04j,   2.385e-04 -3.664e-04j],
                       [  2.477e-14 +1.494e-14j,   2.477e-14 -1.494e-14j,  -2.471e-14 +1.507e-14j,  -2.471e-14 -1.507e-14j],
                       [ -1.085e-14 +3.956e-14j,  -1.085e-14 -3.956e-14j,   1.096e-14 +3.991e-14j,   1.096e-14 -3.991e-14j],
                       [  1.820e-02 +2.147e-13j,   1.820e-02 -2.147e-13j,  -1.814e-02 +2.167e-13j,  -1.814e-02 -2.167e-13j],
                       [ -7.138e-03 +1.082e-02j,  -7.138e-03 -1.082e-02j,   7.122e-03 +1.094e-02j,   7.122e-03 -1.094e-02j],
                       [  2.257e-01 -3.423e-01j,   2.257e-01 +3.423e-01j,  -2.252e-01 -3.460e-01j,  -2.252e-01 +3.460e-01j],
                       [  5.757e-01 +6.781e-12j,   5.757e-01 -6.781e-12j,  -5.737e-01 +6.844e-12j,  -5.737e-01 -6.844e-12j]])

    tim0 = BeamElement(0, 0.0, le_, i_d_, o_d_, E_, G_, rho_,
                       shear_effects=True,
                       rotary_inertia=True,
                       gyroscopic=True)
    tim1 = BeamElement(1, 0.25, le_, i_d_, o_d_, E_, G_, rho_,
                       shear_effects=True,
                       rotary_inertia=True,
                       gyroscopic=True)

    shaft_elm = [tim0, tim1]
    disk0 = DiskElement(1, rho_, 0.07, 0.05, 0.28)
    stf = 1e6
    bearing0 = Bearing(0, stf, stf, 0, 0)
    bearing1 = Bearing(2, stf, stf, 0, 0)

    rotor1 = Rotor(shaft_elm, [disk0], [bearing0, bearing1])
    assert_almost_equal(rotor1.M, Mr1, decimal=3)
    assert_almost_equal(rotor1.A[:12, :12], A0_0, decimal=3)
    assert_almost_equal(rotor1.A[:12, 12:24], A0_1, decimal=3)
    assert_almost_equal(rotor1.A[12:24, :12]/1e7, A1_0, decimal=3)
    assert_almost_equal(rotor1.A[12:24, 12:24]/1e7, A1_1, decimal=3)
    #  sorted eigenvalues, eigenvectors
    rotor1_evals, rotor1_evects = rotor1.eigen()
    assert_almost_equal(rotor1_evals, evals_sorted, decimal=3)
    assert_almost_equal(rotor1_evects[:, 0:4], evects_sorted, decimal=3)
    #  not sorted
    rotor1_evals, rotor1_evects = rotor1.eigen(sorted_=False)
    assert_almost_equal(rotor1_evals, evals, decimal=3)
    assert_almost_equal(rotor1_evects[:, 0:4], evects, decimal=3)
#  TODO implement more tests using a simple rotor with 2 elements and one disk
#  TODO add test for rotor with disks and bearings

